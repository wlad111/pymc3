language: python

cache:
  directories:
    - $HOME/.theano
    - $HOME/miniconda3

addons:
  apt_packages:
    - pandoc

before_install:
  - . ./scripts/install_miniconda.sh
  - export MKL_THREADING_LAYER=GNU

services:
  - xvfb

install:
  - . ./scripts/create_testenv.sh
  - pip install codecov
  - conda list && pip freeze

env:
  - FLOATX='float32' TESTCMD="--durations=10 --ignore=pymc3_ext/tests/test_examples.py --cov-append --ignore=pymc3_ext/tests/test_distributions_random.py --ignore=pymc3_ext/tests/test_variational_inference.py --ignore=pymc3_ext/tests/test_shared.py --ignore=pymc3_ext/tests/test_smc.py --ignore=pymc3_ext/tests/test_updates.py --ignore=pymc3_ext/tests/test_posteriors.py --ignore=pymc3_ext/tests/test_sampling.py --ignore=pymc3_ext/tests/test_parallel_sampling.py --ignore=pymc3_ext/tests/test_dist_math.py --ignore=pymc3_ext/tests/test_distribution_defaults.py --ignore=pymc3_ext/tests/test_distributions_timeseries.py --ignore=pymc3_ext/tests/test_random.py --ignore=pymc3_ext/tests/test_gp.py --ignore=pymc3_ext/tests/test_shape_handling.py"
  - FLOATX='float32' RUN_PYLINT="true" TESTCMD="--durations=10 --cov-append pymc3_ext/tests/test_distributions_random.py pymc3_ext/tests/test_shared.py pymc3_ext/tests/test_smc.py pymc3_ext/tests/test_sampling.py pymc3_ext/tests/test_parallel_sampling.py pymc3_ext/tests/test_dist_math.py pymc3_ext/tests/test_distribution_defaults.py pymc3_ext/tests/test_distributions_timeseries.py pymc3_ext/tests/test_random.py"
  - FLOATX='float32' TESTCMD="--durations=10 --cov-append pymc3_ext/tests/test_examples.py pymc3_ext/tests/test_posteriors.py pymc3_ext/tests/test_gp.py"
  - FLOATX='float32' TESTCMD="--durations=10 --cov-append pymc3_ext/tests/test_variational_inference.py pymc3_ext/tests/test_updates.py pymc3_ext/tests/test_shape_handling.py"
  - FLOATX='float64' TESTCMD="--durations=10 --cov-append --ignore=pymc3_ext/tests/test_examples.py --ignore=pymc3_ext/tests/test_distributions_random.py --ignore=pymc3_ext/tests/test_variational_inference.py --ignore=pymc3_ext/tests/test_shared.py --ignore=pymc3_ext/tests/test_smc.py --ignore=pymc3_ext/tests/test_updates.py --ignore=pymc3_ext/tests/test_posteriors.py --ignore=pymc3_ext/tests/test_sampling.py --ignore=pymc3_ext/tests/test_parallel_sampling.py --ignore=pymc3_ext/tests/test_dist_math.py --ignore=pymc3_ext/tests/test_distribution_defaults.py --ignore=pymc3_ext/tests/test_distributions_timeseries.py --ignore=pymc3_ext/tests/test_random.py --ignore=pymc3_ext/tests/test_gp.py --ignore=pymc3_ext/tests/test_shape_handling.py"
  - FLOATX='float64' TESTCMD="--durations=10 --cov-append pymc3_ext/tests/test_distributions_random.py pymc3_ext/tests/test_shared.py pymc3_ext/tests/test_smc.py pymc3_ext/tests/test_sampling.py pymc3_ext/tests/test_parallel_sampling.py pymc3_ext/tests/test_dist_math.py pymc3_ext/tests/test_distribution_defaults.py pymc3_ext/tests/test_distributions_timeseries.py pymc3_ext/tests/test_random.py"
  - FLOATX='float64' TESTCMD="--durations=10 --cov-append pymc3_ext/tests/test_examples.py pymc3_ext/tests/test_posteriors.py pymc3_ext/tests/test_gp.py"
  - FLOATX='float64' TESTCMD="--durations=10 --cov-append pymc3_ext/tests/test_variational_inference.py pymc3_ext/tests/test_updates.py pymc3_ext/tests/test_shape_handling.py"

script:
  - . ./scripts/test.sh $TESTCMD

after_success:
  - codecov

stages:
  - test
  - name: binder
    if: (branch = master) AND (NOT (type IN (pull_request)))

jobs:
  include:
  - stage: binder
    before_install: skip
    install: skip
    script:
    # Use Binder build API to trigger repo2docker to build image on GKE and OVH Binder Federation clusters
    - bash binder/trigger_binder.sh https://gke.mybinder.org/build/gh/pymc-devs/pymc3_ext/"${TRAVIS_BRANCH}"
    - bash binder/trigger_binder.sh https://ovh.mybinder.org/build/gh/pymc-devs/pymc3_ext/"${TRAVIS_BRANCH}"
    after_success: skip
